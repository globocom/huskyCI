enry:
  name: enry
  image: huskyci/enry
  cmd: |+
    mkdir -p ~/.ssh &&
    echo 'GIT_PRIVATE_SSH_KEY' > ~/.ssh/huskyci_id_rsa &&
    chmod 600 ~/.ssh/huskyci_id_rsa &&
    echo "IdentityFile ~/.ssh/huskyci_id_rsa" >> /etc/ssh/ssh_config &&
    echo "StrictHostKeyChecking no" >> /etc/ssh/ssh_config &&
    git clone -b %GIT_BRANCH% --single-branch %GIT_REPO% code --quiet 2> /tmp/errorGitCloneEnry
    if [ $? -eq 0 ]; then
      cd code
      enry --json | tr -d '\r\n'
    else
      echo "ERROR_CLONING"
      cat /tmp/errorGitCloneEnry
    fi
  language: Generic
  default: true
  timeOutInSeconds: 60

gas:
  name: gas
  image: huskyci/gas
  cmd: |+
    mkdir -p ~/.ssh &&
    echo 'GIT_PRIVATE_SSH_KEY' > ~/.ssh/huskyci_id_rsa &&
    chmod 600 ~/.ssh/huskyci_id_rsa &&
    echo "IdentityFile ~/.ssh/huskyci_id_rsa" >> /etc/ssh/ssh_config &&
    echo "StrictHostKeyChecking no" >> /etc/ssh/ssh_config &&
    cd src
    git clone -b %GIT_BRANCH% --single-branch %GIT_REPO% code --quiet 2> /tmp/errorGitCloneGas
    if [ $? -eq 0 ]; then
      cd code
      touch results.json
      /go/bin/gas -quiet -fmt=json -log=log.txt -out=results.json ./... 2> /dev/null
      jq -j -M -c . results.json
    else
      echo "ERROR_CLONING"
      cat /tmp/errorGitCloneGas
    fi
  language: Go
  default: true
  timeOutInSeconds: 360

bandit:
  name: bandit
  image: huskyci/bandit
  cmd: |+
     mkdir -p ~/.ssh &&
     echo 'GIT_PRIVATE_SSH_KEY' > ~/.ssh/huskyci_id_rsa &&
     chmod 600 ~/.ssh/huskyci_id_rsa &&
     echo "IdentityFile ~/.ssh/huskyci_id_rsa" >> /etc/ssh/ssh_config &&
     echo "StrictHostKeyChecking no" >> /etc/ssh/ssh_config &&
     git clone -b %GIT_BRANCH% --single-branch %GIT_REPO% code --quiet 2> /tmp/errorGitCloneBandit
     if [ $? -eq 0 ]; then
       cd code
       bandit -r . -f json 2> /dev/null > results.json
       cat results.json | -jq '. | {results, errors}'
     else
       echo "ERROR_CLONING"
       cat /tmp/errorGitCloneBandit
     fi
  language: Python
  default: true
  timeOutInSeconds: 360

brakeman:
  name: brakeman
  image: docker.artifactory.globoi.com/huskyci/brakeman:2.4-alpine
  cmd: |+
    mkdir -p ~/.ssh &&
    echo 'GIT_PRIVATE_SSH_KEY' > ~/.ssh/huskyci_id_rsa &&
    chmod 600 ~/.ssh/huskyci_id_rsa &&
    echo "IdentityFile ~/.ssh/huskyci_id_rsa" >> /etc/ssh/ssh_config &&
    echo "StrictHostKeyChecking no" >> /etc/ssh/ssh_config &&
    mkdir app
    git clone -b %GIT_BRANCH% --single-branch %GIT_REPO% ./app/code --quiet 2> /tmp/errorGitCloneBandit
    if [ $? -eq 0 ]; then
      brakeman -q -o results.json .
      jq -j -M -c . results.json
    else
      echo "ERROR_CLONING"
      cat /tmp/errorGitCloneBandit
    fi
  language: Ruby
  default: true
  timeOutInSeconds: 360
